@startuml

title __SRC's Class Diagram__\n

    abstract class Canard {
        {abstract} + afficher()
        + cancaner()
        + nager()
        + setFlyBehavior()
        + setQuackBehavior()
        + voler()
    }
  

    class CanardEnPlastique {
        + CanardEnPlastique()
        + afficher()
    }

    class Colvert {
        + Colvert()
        + afficher()
    }
  

    interface FlyBehavior {
        {abstract} + voler()
    }
  

    class FlyWithWings {
        + voler()
    }
  

    class NotFly {
        + voler()
    }
  

    class Quack {
        + cancaner()
    }
  

    interface QuackBehavior {
        {abstract} + cancaner()
    }

    class SuperCanard {
        {static} + main()
    }
  

    class SuperCanardTest {
        {static} ~ bilanAssertions : int
        ~ clavierProgrammeATester : BufferedWriter
        ~ ecranProgrammeATester : BufferedReader
        ~ executionProgrammeATester : Process
        ~ finDeLigne : String
        {static} ~ programmeATester : String
        {static} ~ totalAssertions : int
        {static} + main()
        + test_ligne1()
        + test_ligne2()
        + test_ligne3()
        + test_ligne4()
        # setUp()
    }

    class SuperCanardTest2 {
        - oldStream : PrintStream
        - outContent : ByteArrayOutputStream
        + cleanUpStreams()
        + setUpStreams()
        + testComportementCanardEnPlastique()
        + testComportementColvert()
        - readLine()
    }
  

    Canard o-- FlyBehavior : flyBehavior
    Canard o-- QuackBehavior : quackBehavior
    CanardEnPlastique -up-|> Canard
    Colvert -up-|> Canard
    FlyWithWings .up.|> FlyBehavior
    NotFly .up.|> FlyBehavior
    Quack .up.|> QuackBehavior


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
